package com.timmy.dataalg.leetcode

/**
 * 给定一个 m x n 整数矩阵 matrix ，找出其中 最长递增路径 的长度。
对于每个单元格，你可以往上，下，左，右四个方向移动。 你 不能 在 对角线 方向上移动或移动到 边界外（即不允许环绕）。

示例 1：
输入：matrix = [[9,9,4],[6,6,8],[2,1,1]]
输出：4
解释：最长递增路径为 [1, 2, 6, 9]。

示例 2：
输入：matrix = [[3,4,5],[3,2,6],[2,2,1]]
输出：4
解释：最长递增路径是 [3, 4, 5, 6]。注意不允许在对角线方向上移动。

示例 3：
输入：matrix = [[1]]
输出：1
 */
fun main() {

}

/**
 * 1、审题：
 * - 输入一个二维矩阵，找到其中一个递增子序列，返回最长子序列的长度
 * 2、解题：dfs，深度优先搜索算法
 * -
 */
fun longestIncreasingPath(matrix: Array<IntArray>): Int {

    return 0
}